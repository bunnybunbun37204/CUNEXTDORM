@startuml

' #########################
' #     ENUMERATIONS      #
' #########################

enum UserRole {
  TENANT
  OWNER
  ADMIN
}

enum BedLabel {
  A
  B
  C
  D
}

enum NotificationType {
  PAYMENT_REMINDER
  MAINTENANCE_UPDATE
  CONTRACT_ALERT
  SYSTEM_ANNOUNCEMENT
  OTHER
}

enum FacilityType {
  AIRCON
  FRIDGE
  WATER_HEATER
  FURNITURE
  LIGHTING
  OTHER
}

enum MaintenanceStatus {
  PENDING
  IN_PROGRESS
  RESOLVED
}

enum PaymentStatus {
  PENDING
  PAID
  OVERDUE
}

enum ApplicationStatus {
  PENDING
  APPROVED
  REJECTED
  UNDER_REVIEW
}

' #########################
' #       CLASSES         #
' #########################

class User {
  - id: String
  - email: String
  - name: String
  - role: UserRole
  - phone: String
  - studentId: String
  - academicYear: String
  - createdAt: DateTime
  - updatedAt: DateTime

  + login(email: String, password: String): Boolean
  + updateProfile(name: String, phone: String): void
  + submitMaintenanceRequest(description: String): MaintenanceLog
  + submitExtensionApplication(): DormApplication
  + payRent(): void
  + getAgreement(): RentalAgreement
  + notifyPayment(): void
}

class Student {
  + viewPaymentHistory(): RentPayment[]
  + participateInActivity(activity: DormActivity): void
}

class DormStaff {
  + approveApplication(applicationId: String): DormApplication
  + processMaintenanceRequest(logId: String, status: MaintenanceStatus): void
  + generateReport(type: String): void 
}

class DormBuilding {
  - id: String
  - name: String
  - address: String
  - createdAt: DateTime
  - updatedAt: DateTime

  + addRoom(room: DormRoom): void
  + removeRoom(roomId: String): void
}

class DormRoom {
  - id: String
  - roomNumber: String
  - basePrice: Float
  - waterPrice: Float
  - electricPrice: Float
  - status: String

  + calculateTotalCost(waterUsed: Float, electricUsed: Float): Float
  + updateStatus(newStatus: String): void
}

class Bed {
  - id: String
  - label: BedLabel
  - status: BedStatus

  + assignUser(user: User): Boolean
  + checkAvailability(): Boolean
}

class MaintenanceLog {
  - id: String
  - description: String
  - repairType: RepairType
  - status: MaintenanceStatus

  + assignTechnician(technician: User): void
  + updateStatus(newStatus: MaintenanceStatus): void
}

class RentalAgreement {
  - id: String
  - startDate: DateTime
  - endDate: DateTime
  - monthlyRent: Float

  + renewAgreement(newEndDate: DateTime): void
  + terminateAgreement(): void
  + findPaymentForMonth(): Float
}

class RentPayment {
  - id: String
  - month: DateTime
  - totalAmount: Float
  - status: PaymentStatus

  + processPayment(amount: Float): Boolean
  + generateReceipt(): PDF
}

class Notification {
  - id: String
  - type: NotificationType
  - title: String
  - content: String

  + sendNotification(): void
  + markAsRead(): void
}

class Facility {
  + id: String
  + type: FacilityType
  + description: String?
  + status: String
  + createdAt: DateTime
  + updatedAt: DateTime
}

class DormActivity {
  - id: String
  - name: String
  - date: DateTime
  - maxPoints: Integer

  + addParticipant(user: User): void
  + calculatePoints(): Integer
}

class DormApplication {
  - id: String
  - applicantId: String
  - academicYear: String
  - status: ApplicationStatus
  - preferredBuildingId: String  
  - floor: Integer
  - requestedBeds: BedLabel   à¹ˆ
  - activities: DormActivity[]
  - answers: Map<String, String>

  + validatePreferredBuildingAvailability(): Boolean 
  + validateAcademicYear(academicYear: Integer): Boolean
}

class DormQuestion {
  - id: String
  - questionText: String
  - isRequired: Boolean

  + updateQuestion(text: String): void
  + toggleRequired(): void
}

' #########################
' #    RELATIONSHIPS      #
' #########################

User <|-- Student
User <|-- DormStaff

User "1" -- "many" RentalAgreement : has >
User "1" -- "many" MaintenanceLog : reports >
User "1" -- "many" DormActivity : participates in >
User "1" -- "many" DormApplication : submits >

DormBuilding "1" -- "many" DormRoom : contains >
DormRoom "1" -- "many" Bed : has >
DormRoom "1" -- "many" Facility : has >
DormRoom "1" -- "many" MaintenanceLog : associated with >

Bed "1" -- "1" RentalAgreement : assigned to >
RentalAgreement "1" -- "many" RentPayment : includes >

MaintenanceLog "1" -- "0..1" Facility : affects >
MaintenanceLog "1" -- "0..1" Bed : affects >

DormApplication "1" -- "1" DormBuilding : applies to >
DormApplication "1" -- "1..4" Bed : requests >
DormStaff "1" -- "many" DormApplication : approves >

@enduml